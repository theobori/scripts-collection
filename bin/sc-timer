#!/usr/bin/env bash

set -e

readonly RESOLVED_DIR=$(dirname $(realpath ${0}))

source "${RESOLVED_DIR}/../lib/sc-utils"

# Script version
readonly VERSION=0.0.1

readonly FILENAME=$(basename ${0})

# Default vars
HOUR="00"
MINUTE="00"
SECOND="00"

function print_help() {
    cat <<USAGE
${FILENAME}
Version ${VERSION}

Optional arguments
  -h        Show this help message
  -H        Hours
  -M        Minutes
  -S        Seconds
  -v        Print the script version
USAGE
}

function parse() {
    # Do not change the opts order !
    while getopts "H:M:S:hv" arg; do
        case ${arg} in
            H)
                if [[ ${OPTARG} -lt 0 || ${OPTARG} -gt 24 ]]; then
                    echo "Invalid hour (0 <= H <= 24)"
                    return 1
                fi

                HOUR=${OPTARG}
                ;;

            M)
                if [[ ${OPTARG} -lt 0 || ${OPTARG} -gt 24 ]]; then
                    echo "Invalid minute (0 <= M <= 60)"
                    return 1
                fi

                MINUTE=${OPTARG}
                ;;

            S)
                if [[ ${OPTARG} -lt 0 || ${OPTARG} -gt 24 ]]; then
                    echo "Invalid minute (0 <= S <= 60)"
                    return 1
                fi

                SECOND=${OPTARG}
                ;;

            h)
                print_help
                exit 0
                ;;

            v)
                echo ${FILENAME} -- ${VERSION}
                exit 0
                ;;
        esac    
    done
}

function _timer() {
    local -r notification_id=$(notify-send "⏳ Clock starting" -p)
    local timer_format="${HOUR}:${MINUTE}:${SECOND}"

    # Default timer is 10 seconds
    if [[ ${timer_format} == "00:00:00" ]]; then
        SECOND=10
        timer_format="${HOUR}:${MINUTE}:${SECOND}"
    fi

    local -r seconds=$(echo "${timer_format}" | awk -F: '{ print ($1 * 3600) + ($2 * 60) + $3 }')

    timer \
        $((${seconds} * 1000)) \
        ${notification_id} \
        "normal" \
        "⏳ ${timer_format}"
    
    notify-send \
        -u "critical" \
        "🏆 Finish !"
}

function main() {
    parse ${@} || exit 1

    _timer
}

main ${@}
